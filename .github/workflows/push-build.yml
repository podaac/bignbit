# Github Workflow on push to branch
name: BIG n BIT Build & Deploy

on:
  push:

jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest
    name: Build, Publish, Deploy
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SERVICES_SIT }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SERVICES_SIT }}
      AWS_DEFAULT_REGION: us-west-2

    steps:
      - uses: actions/checkout@v3

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          installer-parallel: true

      - name: BIGnBIT source
        run: |
          ls -al

      - name: Generate BIGnBIT Package
        run: |
          chmod +x build-lambda-zip.sh
          ./build-lambda-zip.sh

      - name: Zip BIGnBIT Package
        run: |
          cd dist
          ls -al lambda-package/bignbit/
          zip bignbit-lambda.zip ./lambda-package -r
          mv bignbit-lambda.zip ../
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bignbit-lambda
          path: bignbit-lambda.zip

      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.4

      - name: Set Up Lambda Module ZIP
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
        run: |
          cd terraform_deploy
          cp -r ../terraform/ .
          mv terraform bignbit_module
          ls -al
          cp ../bignbit-lambda.zip bignbit_module/
          ls -al bignbit_module/
          pwd
          cd ..

      - name: Terraform Deploy BIGnBIT Module
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
        run: |
          pwd
          cd terraform_deploy
          ls -al bignbit_module/
          terraform --version
          terraform init -reconfigure -input=false -backend-config="bucket=podaac-services-sit-haile-terraform"
          terraform plan -input=false -var-file=./tfvars/sit.tfvars -var=gibs_account_id=$GIBS_ACCOUNT_ID_SIT -var=app_version=0.3.3 -var=lambda_container_image_uri=ghcr.io/podaac/podaac-big:0.3.3 -out=tfplan
          terraform apply -input=false -auto-approve tfplan
